@model OrchardCore.ContentFields.ViewModels.EditTextFieldViewModel
@using OrchardCore
@using OrchardCore.ContentFields.Settings
@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore.Mvc.Utilities
@using Tutorials.Fields.Settings

@{
    var settings = Model.PartFieldDefinition.GetSettings<TextFieldSettings>();
    var regExSettings = Model.PartFieldDefinition.GetSettings<TextFieldRegExEditorSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.Field.ContentItem);
    var uniqueName = $"{Model.PartFieldDefinition.PartDefinition.Name}-{Model.PartFieldDefinition.Name}";
}

<div class="@Orchard.GetWrapperCssClasses("field-wrapper", $"field-wrapper-{uniqueName.HtmlClassify()}")" id="@Html.IdFor(x => x.Text)_FieldWrapper">
    <label asp-for="Text" class="@Orchard.GetLabelCssClasses()">@(((ContentPartFieldDefinition)Model.PartFieldDefinition).DisplayName())</label>
    <div class="@Orchard.GetEndCssClasses()">
        <input asp-for="Text" class="form-control content-preview-text" pattern="@regExSettings?.Expression"/>
        @if (!String.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>
